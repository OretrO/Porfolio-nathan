#root {
  width: 100%;
  margin: 0;
  padding: 0;
  text-align: center;
}

/* Ensure the page background can fill the whole viewport.
   Do not constrain #root with a max-width — the content container (.container)
   will handle centering and max-width instead. */

/* Make the root elements full-height so #app-root background covers the page */
html, body, #root, #app-root {
  height: 100%;
}

/* Layout container used by App */
.container {
  max-width: 1000px;
  margin: 2rem auto;
  padding: 0 1rem;
  text-align: left;
}
.hero {
    text-align: center; /* centre tout le contenu */
    margin-top: 30px;
}

.avatar {
    width: 120px;
    height: 120px;
    object-fit: cover;   /* recadre pour bien remplir */
    border-radius: 50%;  /* rend l’image parfaitement ronde */
    display: block;
    margin: 0 auto 20px; /* centre l’image et ajoute un espace dessous */
}
/* Navbar */
.navbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 1rem;
  padding: 1rem 0;
}
.brand {
  font-weight: 700;
  cursor: pointer;
}
.nav-list {
  list-style: none;
  display: flex;
  gap: 1rem;
  margin: 0;
  padding: 0;
}
.nav-item {
  cursor: pointer;
  padding: 0.25rem 0.5rem;
  border-radius: 6px;
}
.nav-item:hover {
  background: rgba(100,108,255,0.08);
}
.nav-item.active {
  background: rgba(100,108,255,0.16);
  font-weight: 600;
}

/* Hero */
.hero {
  padding: 2rem 0;
}
.hero .lead {
  color: rgba(255,255,255,0.8);
  margin-top: 0.5rem;
}
.hero-actions {
  margin-top: 1rem;
  display: flex;
  gap: 0.5rem;
}
button.muted {
  opacity: 0.85;
  background: transparent;
  border: 1px solid rgba(255,255,255,0.06);
}

/* Page transitions and reveal animations */
.reveal {
  opacity: 0;
  transform: translateY(14px) scale(0.995);
  transition: opacity 420ms cubic-bezier(.2,.9,.2,1), transform 420ms cubic-bezier(.2,.9,.2,1);
}
.reveal.in-view {
  opacity: 1;
  transform: none;
}

/* Theme toggle button */
.nav-actions { display: flex; align-items: center; gap: 0.5rem; }
.theme-toggle {
  background: transparent;
  border: 1px solid rgba(255,255,255,0.06);
  padding: 0.35rem 0.6rem;
  border-radius: 8px;
  font-size: 1.05rem;
}
.theme-toggle:hover { border-color: rgba(100,108,255,0.2); }

/* Projects grid */
.projects-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1rem;
  margin-top: 1rem;
}
.project-card {
  padding: 1rem;
  border-radius: 8px;
  background: rgba(255,255,255,0.03);
  box-shadow: 0 1px 0 rgba(0,0,0,0.4) inset;
}
.project-card:hover { transform: translateY(-6px); box-shadow: 0 12px 24px rgba(0,0,0,0.45); transition: transform 220ms, box-shadow 220ms; }
.project-actions {
  display: flex;
  gap: 0.5rem;
  margin-top: 0.75rem;
}

/* Contact form */
.contact-form {
  display: grid;
  gap: 0.5rem;
  max-width: 560px;
}
.contact-form label {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}
.contact-form input,
.contact-form textarea {
  padding: 0.5rem;
  border-radius: 6px;
  border: 1px solid rgba(255,255,255,0.06);
  background: rgba(0,0,0,0.3);
  color: inherit;
}

/* Footer */
.site-footer {
  margin-top: 2rem;
  padding-top: 1.5rem;
  border-top: 1px solid rgba(255,255,255,0.04);
}
.footer-inner {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
}
.footer-inner .social a {
  margin-left: 0.5rem;
}

/* Utilities */
.lead { font-size: 1.1rem; }

/* Keep original logo rules from vite template */
.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo { animation: logo-spin infinite 20s linear; }
}

/* Responsive tweaks */
@media (max-width: 640px) {
  .footer-inner { flex-direction: column; align-items: flex-start; }
  .nav-list { gap: 0.5rem; }
}

/* Theme-aware tweaks when App sets data-theme */
body[data-theme="dark"] {
  background: radial-gradient(1200px 600px at 10% 10%, rgba(100,108,255,0.06), transparent), linear-gradient(180deg, #141418 0%, #18181c 100%);
  color: #e6e7ee;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}
body[data-theme="light"] {
  background: linear-gradient(180deg, #ffffff 0%, #f7f9ff 100%);
  color: #1f2937;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}

/* Apply background also to html element and make it fixed so very long pages keep the theme */
html[data-theme="dark"], body[data-theme="dark"] {
  background: radial-gradient(1200px 600px at 10% 10%, rgba(100,108,255,0.06), transparent), linear-gradient(180deg, #141418 0%, #18181c 100%);
  color: #e6e7ee;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}
html[data-theme="light"], body[data-theme="light"] {
  background: linear-gradient(180deg, #ffffff 0%, #f7f9ff 100%);
  color: #1f2937;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
}

/* Keep #app-root styles but make background transparent so html/body handle full-page background */
#app-root[data-theme="dark"] {
  min-height: 100vh; /* keep spacing */
  background: transparent;
  color: inherit;
}
#app-root[data-theme="light"] {
  min-height: 100vh; /* keep spacing */
  background: transparent;
  color: inherit;
}

/* Skill bars for About component */
.skills-list {
  display: grid;
  gap: 0.75rem;
  margin-bottom: 1rem;
}
.skill {
  display: block;
}
.skill-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-weight: 600;
  font-size: 0.95rem;
  margin-bottom: 0.35rem;
}
.skill-name { color: inherit; }
.skill-pct { opacity: 0.9; font-weight: 700; }
.skill-track {
  background: rgba(255,255,255,0.06);
  height: 12px;
  border-radius: 999px;
  overflow: hidden;
}
.skill-fill {
  /* valeur CSS custom par défaut pour rassurer le linter/validator */
  --pct: 0%;
  height: 100%;
  width: 0%; /* valeur initiale, remplie via inline style */
  background: linear-gradient(90deg, #646cff, #4f7bff);
  box-shadow: 0 4px 14px rgba(79,123,255,0.12) inset;
  border-radius: 999px;
  transition: width 850ms cubic-bezier(.2,.9,.2,1);
}

/* When reveal animation sets in-view, animate fills to their width (with fallback) */
.reveal.in-view .skill-fill {
  width: var(--pct, 0%);
}

/* Category (global) skill bars */
.category-bars {
  display: grid;
  gap: 1rem;
  margin-bottom: 1.25rem;
}
.category {
  display: block;
}
.category-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-weight: 700;
  font-size: 1rem;
  margin-bottom: 0.45rem;
}
.category-name { color: inherit; }
.category-pct { opacity: 0.95; font-weight: 800; }
.category-track {
  background: rgba(255,255,255,0.04);
  height: 16px;
  border-radius: 999px;
  overflow: hidden;
}
.category-fill {
  --pct: 0%;
  height: 100%;
  width: 0%;
  background: linear-gradient(90deg, #ff7a7a, #ffb86b);
  border-radius: 999px;
  box-shadow: 0 6px 20px rgba(255,138,108,0.08) inset;
  transition: width 900ms cubic-bezier(.2,.9,.2,1);
}

/* animate when reveal becomes visible */
.reveal.in-view .category-fill { width: var(--pct, 0%); }

/* Category block tweaks */
.category-block {
  padding: 0.75rem 0;
  border-bottom: 1px solid rgba(255,255,255,0.03);
}
.category-skills {
  margin-top: 0.75rem;
  display: grid;
  gap: 0.5rem;
}

/* Mini skills inside a category */
.skill-mini {
  display: block;
}
.skill-mini-meta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-size: 0.9rem;
  margin-bottom: 0.25rem;
  color: inherit;
}
.skill-mini-track {
  background: rgba(255,255,255,0.04);
  height: 8px;
  border-radius: 999px;
  overflow: hidden;
}
.skill-mini-fill {
  --pct: 0%;
  height: 100%;
  width: 0%;
  background: linear-gradient(90deg, #7dd3fc, #60a5fa);
  border-radius: 999px;
  transition: width 700ms cubic-bezier(.2,.9,.2,1);
}

/* animate when reveal visible */
.reveal.in-view .skill-mini-fill { width: var(--pct, 0%); }

@media (prefers-color-scheme: light) {
  .skill-track { background: rgba(33,53,71,0.06); }
  .skill-fill { box-shadow: 0 4px 14px rgba(100,108,255,0.08) inset; }
}

/* Fixed full-page background fallback using a pseudo-element to guarantee coverage on very long pages */
body::before {
  content: "";
  position: fixed;
  inset: 0;
  z-index: -9999; /* behind everything */
  pointer-events: none;
  background-repeat: no-repeat;
  background-attachment: fixed;
  background-size: cover;
  transition: opacity 260ms ease;
}
body[data-theme="dark"]::before {
  background: radial-gradient(1200px 600px at 10% 10%, rgba(100,108,255,0.06), transparent), linear-gradient(180deg, #141418 0%, #18181c 100%);
}
body[data-theme="light"]::before {
  background: linear-gradient(180deg, #ffffff 0%, #f7f9ff 100%);
}

/* Project detail styles */
.project-detail {
  padding: 0.5rem 0 1.5rem;
}
.project-image img { border-radius: 8px; box-shadow: 0 12px 30px rgba(0,0,0,0.45); }
.project-long { margin: 1rem 0 1.25rem; color: inherit; line-height: 1.6; }
.project-skills { margin-top: 1rem; }

/* Make project cards visually clickable */
.project-card { cursor: default; }
.project-card h3 { margin-top: 0; }
.project-actions { display: flex; gap: 0.5rem; align-items: center; }
.project-actions a, .project-actions button { font-size: 0.95rem; }

/* Badges pour les compétences dans ProjectDetail */
.skill-badges {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.5rem;
}
.skill-badge {
  background: rgba(255,255,255,0.06);
  color: inherit;
  padding: 0.35rem 0.65rem;
  border-radius: 999px;
  font-size: 0.9rem;
  font-weight: 600;
  border: 1px solid rgba(255,255,255,0.03);
}

@media (prefers-color-scheme: light) {
  .skill-badge { background: rgba(33,53,71,0.06); }
}
